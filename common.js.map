{"version":3,"file":"common.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/observable/of.js","./projects/mfe1/src/app/app.factories.ts","./projects/mfe1/src/app/download.component.ts","./projects/mfe1/src/app/download.module.ts","./projects/mfe1/src/app/handlers/download-content.handler.ts","./projects/mfe1/src/app/upload.component.ts","./node_modules/@rollthecloudinc/content/fesm2020/rollthecloudinc-content.mjs","./node_modules/@rollthecloudinc/plugin/fesm2020/rollthecloudinc-plugin.mjs"],"sourcesContent":["import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of(...args) {\n    const scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n","import { ContentPlugin } from '@rollthecloudinc/content';\nimport { DownloadComponent } from './download.component';\nimport { DownloadContentHandler } from './handlers/download-content.handler';\n\nexport const mfe1DownloadContentPluginFactory  = ({ handler }: { handler: DownloadContentHandler }) => {\n  return new ContentPlugin<string>({\n    id: 'mfe1_download',\n    title: 'Mfe1 Download',\n    selectionComponent: undefined,\n    editorComponent: undefined,\n    renderComponent: DownloadComponent,\n    handler\n  } as any);\n};","import { Component, OnInit } from '@angular/core';\nimport { ContentPluginManager } from '@rollthecloudinc/content';\n\n@Component({\n    selector: 'mfe1-download',\n    template: `\n        <div class=\"task\">\n            <!-- <img src=\"https://d16ooy9q113vw2.cloudfront.net/assets/download.png\"> -->\n            <img src=\"https://d8em0358gicmm.cloudfront.net/assets/download.png\">\n            <p>Download</p>\n        </div>\n    `\n})\n\nexport class DownloadComponent implements OnInit {\n    constructor(\n        private cpm: ContentPluginManager\n    ) { \n        console.log('download component constructor');\n    }\n\n    ngOnInit() { }\n}","import { NgModule } from '@angular/core';\nimport { DownloadComponent } from './download.component';\nimport { DownloadContentHandler } from './handlers/download-content.handler';\nimport { ContentPluginManager } from '@rollthecloudinc/content';\nimport { mfe1DownloadContentPluginFactory } from './app.factories';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    DownloadComponent\n  ],\n  providers: [\n    DownloadContentHandler\n  ],\n  exports: [\n    DownloadComponent\n  ]\n})\nexport class DownloadModule { \n  constructor(\n    cpm: ContentPluginManager,\n    downloadHandler: DownloadContentHandler\n  ) {\n    console.log('register mfe1 download content plugin');\n    // @todo: lint not picking up register() because in plugin module base class.\n    cpm.register(mfe1DownloadContentPluginFactory({ handler: downloadHandler }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ContentHandler, ContentBinding, ContentPluginEditorOptions } from '@rollthecloudinc/content';\nimport { AttributeValue } from '@rollthecloudinc/attributes';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class DownloadContentHandler implements ContentHandler {\n\n  constructor() { }\n\n  handleFile(file: File): Observable<Array<AttributeValue>> {\n    return of();\n  }\n\n  handlesType(type: string): boolean {\n    return false;\n  }\n\n  implementsRendererOverride(): boolean {\n    return false;\n  }\n\n  hasRendererOverride(settings: Array<AttributeValue>): Observable<boolean> {\n    return of(false);\n  }\n\n  isDynamic(settings: Array<AttributeValue>): boolean {\n    return false;\n  }\n\n  isData(settings: Array<AttributeValue>): boolean {\n    return false;\n  }\n\n  getBindings(settings: Array<AttributeValue>, type: string, metadata?: Map<string, any>): Observable<Array<ContentBinding>> {\n    return of([]);\n  }\n\n  fetchDynamicData(settings: Array<AttributeValue>, metadata: Map<string, any>): Observable<any> {\n    return of();\n  }\n\n  buildDynamicItems(settings: Array<AttributeValue>, metadata: Map<string, any>): Observable<Array<AttributeValue>> {\n    return of([]);\n  }\n\n  stateDefinition(settings: Array<AttributeValue>): Observable<any> {\n    return of({});\n  }\n\n  editorOptions(settings: Array<AttributeValue>): Observable<ContentPluginEditorOptions> {\n    return of(new ContentPluginEditorOptions({ fullscreen: true }));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mfe1-upload',\n    template: `\n        <div class=\"task\">\n            <!-- <img src=\"https://d16ooy9q113vw2.cloudfront.net/assets/upload.png\"> -->\n            <img src=\"https://d8em0358gicmm.cloudfront.net/assets/upload.png\">\n            <p>Upload</p>\n        </div>\n    `\n})\n\nexport class UploadComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() { }\n}","import * as i0 from '@angular/core';\nimport { NgModule, InjectionToken, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AttributeValue } from '@rollthecloudinc/attributes';\nimport * as i1 from '@rollthecloudinc/plugin';\nimport { Plugin, BasePluginManager, PluginDef } from '@rollthecloudinc/plugin';\nimport { of } from 'rxjs';\nimport * as i2 from '@rollthecloudinc/utils';\n\n/*import { defaultPluginManagerFactory, pluginManagerToken } from '@rollthecloudinc/plugin';\nimport { ContentPlugin, ContentPluginDef } from './models/content.models';\nimport { ContentPluginManager } from './services/content-plugin-manager.service';*/\nclass ContentModule {\n}\nContentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ContentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nContentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ContentModule, imports: [CommonModule] });\nContentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ContentModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ContentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule]\n                }]\n        }] });\n\nclass ContentPlugin extends Plugin {\n    constructor(data) {\n        super(data);\n        this.fileTypes = [];\n        if (data) {\n            this.name = this.id;\n            this.handler = data.handler !== undefined ? data.handler : undefined;\n            this.selectionComponent = data.selectionComponent ? data.selectionComponent : undefined;\n            this.renderComponent = data.renderComponent ? data.renderComponent : undefined;\n            this.editorComponent = data.editorComponent ? data.editorComponent : undefined;\n        }\n    }\n}\nclass ContentBinding {\n    constructor(data) {\n        if (data) {\n            this.type = data.type;\n            this.id = data.id;\n        }\n    }\n}\nclass ContentInstance {\n    constructor(data) {\n        this.settings = [];\n        if (data) {\n            this.pluginName = data.pluginName;\n            if (data.settings) {\n                this.settings = data.settings.map(s => new AttributeValue(s));\n            }\n        }\n    }\n}\n/*export class Snippet {\n  content: string;\n  contentType: string;\n  jsFile?: string;\n  jsScript?: string;\n  constructor(data?: Snippet) {\n    if(data) {\n      this.content = data.content;\n      this.contentType = data.contentType;\n      if (data.jsFile && data.jsFile !== '') {\n        this.jsFile = data.jsFile;\n      }\n      if (data.jsScript && data.jsScript !== '') {\n        this.jsScript = data.jsScript;\n      }\n    }\n  }\n}*/\nclass ContentPluginEditorOptions {\n    constructor(data) {\n        this.fullscreen = false;\n        if (data) {\n            this.fullscreen = data.fullscreen;\n        }\n    }\n}\n\nconst CONTENT_PLUGIN = new InjectionToken('ContentPlugin');\n\nclass ContentPluginManager extends BasePluginManager {\n    constructor(pcm, moduleLoader) {\n        super(pcm, moduleLoader);\n    }\n    pluginDef() {\n        return of(new PluginDef({ name: 'content' }));\n    }\n}\nContentPluginManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ContentPluginManager, deps: [{ token: i1.PluginConfigurationManager }, { token: i2.ModuleLoaderService }], target: i0.ɵɵFactoryTarget.Injectable });\nContentPluginManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ContentPluginManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ContentPluginManager, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.PluginConfigurationManager }, { type: i2.ModuleLoaderService }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CONTENT_PLUGIN, ContentBinding, ContentInstance, ContentModule, ContentPlugin, ContentPluginEditorOptions, ContentPluginManager };\n","import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport * as i2 from '@rollthecloudinc/utils';\nimport { UtilsModule } from '@rollthecloudinc/utils';\nimport { of, forkJoin } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nclass PluginModule {\n}\nPluginModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: PluginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPluginModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: PluginModule, imports: [UtilsModule] });\nPluginModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: PluginModule, imports: [[\n            UtilsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: PluginModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    imports: [\n                        UtilsModule\n                    ],\n                    exports: []\n                }]\n        }] });\n\nclass PluginConfigurationManager {\n    constructor() {\n        this.configs = [];\n    }\n    addConfig(cfg) {\n        this.configs.push(cfg);\n    }\n    getConfigs() {\n        return this.configs;\n    }\n}\nPluginConfigurationManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: PluginConfigurationManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nPluginConfigurationManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: PluginConfigurationManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: PluginConfigurationManager, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass ConfigDiscovery {\n    constructor(pcm, moduleLoader) {\n        this.pcm = pcm;\n        this.moduleLoader = moduleLoader;\n    }\n    loadPlugins(pluginDef, ids = []) {\n        const configs = this.pcm.getConfigs();\n        const len = configs.length;\n        const loadModules$ = [];\n        for (let i = 0; i < len; i++) {\n            const len2 = configs[i].modules.length;\n            for (let j = 0; j < len2; j++) {\n                if (configs[i].modules[j].plugins.has(pluginDef.name) &&\n                    (ids.length === 0 ||\n                        ids.some(id => configs[i].modules[j].plugins.get(pluginDef.name).findIndex(p => p === id) > -1))) {\n                    loadModules$.push(this.moduleLoader.loadModule(configs[i].modules[j].module));\n                }\n            }\n        }\n        if (loadModules$.length === 0) {\n            return of(true);\n        }\n        else {\n            return forkJoin(loadModules$).pipe(map(() => true));\n        }\n    }\n}\nConfigDiscovery.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ConfigDiscovery, deps: [{ token: PluginConfigurationManager }, { token: i2.ModuleLoaderService }], target: i0.ɵɵFactoryTarget.Injectable });\nConfigDiscovery.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ConfigDiscovery, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.3\", ngImport: i0, type: ConfigDiscovery, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: PluginConfigurationManager }, { type: i2.ModuleLoaderService }]; } });\n\n// import { Injectable } from '@angular/core';\n// @Injectable()\nclass BasePluginManager {\n    constructor(pcm, moduleLoader) {\n        this.pcm = pcm;\n        this.moduleLoader = moduleLoader;\n        this.pluginInstances = new Map();\n        this.discoveryPipeline = [];\n        this.discovery();\n    }\n    discovery() {\n        this.discoveryPipeline.push(new ConfigDiscovery(this.pcm, this.moduleLoader));\n    }\n    addDiscovery(d) {\n        this.discoveryPipeline.push(d);\n    }\n    register(plugin) {\n        this.pluginInstances.set(plugin.id, plugin);\n    }\n    getPlugins(ids) {\n        const newPlugins = ids ? ids.filter(id => !this.pluginInstances.has(id)) : [];\n        if (ids && newPlugins.length === 0) {\n            return of(new Map(ids.map(id => [id, this.pluginInstances.get(id)])));\n        }\n        else {\n            return this.pluginDef().pipe(switchMap(def => forkJoin(this.discoveryPipeline.map(d => d.loadPlugins(def, newPlugins))).pipe(map(() => ids ? new Map(ids.map(id => [id, this.pluginInstances.get(id)])) : this.pluginInstances))));\n        }\n    }\n    getPlugin(id) {\n        if (this.pluginInstances.has(id)) {\n            return of(this.pluginInstances.get(id));\n        }\n        else {\n            return this.pluginDef().pipe(switchMap(def => forkJoin(this.discoveryPipeline.map(d => d.loadPlugins(def, [id]))).pipe(map(() => this.pluginInstances.get(id)))));\n        }\n    }\n}\n\nclass PluginConfig {\n    constructor(data) {\n        this.modules = [];\n        if (data) {\n            if (data.modules) {\n                this.modules = data.modules.map(m => new PluginConfigModule(m));\n            }\n        }\n    }\n}\nclass Plugin {\n    constructor(data) {\n        if (data) {\n            this.id = data.id;\n            this.title = data.title;\n        }\n    }\n}\nclass PluginDef {\n    constructor(data) {\n        if (data) {\n            this.name = data.name;\n        }\n    }\n}\nclass PluginConfigModule {\n    constructor(data) {\n        if (data) {\n            this.module = data.module;\n            if (data.plugins) {\n                this.plugins = new Map([...data.plugins]);\n            }\n        }\n    }\n}\n/*export class BasePlugin implements Plugin {\n}*/\n\n/*\n * Public API Surface of plugin\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePluginManager, ConfigDiscovery, Plugin, PluginConfig, PluginConfigModule, PluginConfigurationManager, PluginDef, PluginModule };\n"],"names":["i0","NgModule","InjectionToken","Injectable","CommonModule","AttributeValue","i1","Plugin","BasePluginManager","PluginDef","of","i2","ContentModule","ɵfac","ɵmod","ɵinj","type","args","imports","ContentPlugin","constructor","data","fileTypes","name","id","handler","undefined","selectionComponent","renderComponent","editorComponent","ContentBinding","ContentInstance","settings","pluginName","map","s","ContentPluginEditorOptions","fullscreen","CONTENT_PLUGIN","ContentPluginManager","pcm","moduleLoader","pluginDef","PluginConfigurationManager","ModuleLoaderService","ɵprov","providedIn","UtilsModule","forkJoin","switchMap","PluginModule","declarations","exports","configs","addConfig","cfg","push","getConfigs","ConfigDiscovery","loadPlugins","ids","len","length","loadModules$","i","len2","modules","j","plugins","has","some","get","findIndex","p","loadModule","module","pipe","pluginInstances","Map","discoveryPipeline","discovery","addDiscovery","d","register","plugin","set","getPlugins","newPlugins","filter","def","getPlugin","PluginConfig","m","PluginConfigModule","title"],"sourceRoot":"webpack:///"}